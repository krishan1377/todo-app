name: Fullstack CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    # ---- Docker Login ----
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ vars.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    # ---- Build Backend ----
    - name: Build and Push Backend
      run: |
        docker build -t ${{ vars.DOCKER_HUB_USERNAME }}/todo-backend:latest ./backend
        docker push ${{ vars.DOCKER_HUB_USERNAME }}/todo-backend:latest

    # ---- Build Frontend ----
    - name: Build and Push Frontend
      run: |
        docker build -t ${{ vars.DOCKER_HUB_USERNAME }}/todo-frontend:latest ./frontend
        docker push ${{ vars.DOCKER_HUB_USERNAME }}/todo-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: SSH into EC2 and Deploy
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ vars.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Create network if not exists
          docker network create todo-net || true

          # Pull latest images
          docker pull ${{ vars.DOCKER_HUB_USERNAME }}/todo-backend:latest
          docker pull ${{ vars.DOCKER_HUB_USERNAME }}/todo-frontend:latest

          # Stop and remove existing containers
          docker stop todo-backend todo-frontend || true
          docker rm todo-backend todo-frontend || true

          # Run backend container
          docker run -d \
            --restart always \
            --network todo-net \
            --name todo-backend \
            -p 5000:5000 \
            -e DB_HOST=${{ secrets.RDS_HOST }} \
            -e DB_NAME=todo_db \
            -e DB_USER=postgres \
            -e DB_PASS=${{ secrets.RDS_PASSWORD }} \
            ${{ vars.DOCKER_HUB_USERNAME }}/todo-backend:latest

          # Run frontend container (proxying /api â†’ backend)
          docker run -d \
            --restart always \
            --network todo-net \
            --name todo-frontend \
            -p 80:80 \
            ${{ vars.DOCKER_HUB_USERNAME }}/todo-frontend:latest